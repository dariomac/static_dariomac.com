{
  "title": "Mobile MVPs using Cordova",
  "date": "2018-02-25",
  "layout": "document",
  "has_code": false,
  "card": {
    "color": "#99b399",
    "columnid": "archive_6",
    "content": "Things to take care on a mobile MVP and why it's important to your business.",
    "datebox": "2014-12-05",
    "extlink": null,
    "laneid": "Essay",
    "leftbox": "",
    "leftmsg": "",
    "linkto": "/mobile-mvps-using-cordova",
    "position": "20141205",
    "subtaskdetails": [],
    "subtasks": "0",
    "subtaskscomplete": "0",
    "tags": null,
    "title": "Things to take care on a mobile MVP",
    "type":"Document"
  }
}

---

[summary:string]
This article introduces the concept of mobile MVP as a way to test before and avoid the risks of costly native developments by using alternatives to use HTML technology as native.

[pub_date:string]
2014-12-05

[short_description:string]
Things to take care on a mobile MVP and why it's important to your business.

[body:md]
It's time for a little role play. Think about you (the reader) as one of the main stakeholders of a new and revolutionary mobile app thats your startup want to push to the market. Now, to add a little pressure, think that you have a meeting with investors coming up with a hard deadline, and they only will invest in your idea if they see some working version of the app.

Luckily, your team have contacted VAIRIX to assist in turning your idea into reality. Seeing as we provide this kind of services to startups in the past and we have experience in [MVPs](/what-is-an-mvp), we can make this happen.

As always happens in an MVP development, the first thing that we need is the list of critical features to allow the app be deployed quickly. Although is out of the scope of this post I can say that the prioritized list of features is one of the output of an inception workshop (yes, we can do that too!).

Assuming that you already have the feature list, then you ask us “It's a good idea to do a mobile MVP? because I heard that it is not." Ok, let try to be straight with this and tell you how do we see it. The development of any MVP comprises a deep understanding of the core value of your product (those thing that make it special), so balancing “minimum" and “viable" is a major issue in this approach. But in mobile, we have to take special care of some things that will make the difference between a successful mobile MVP and a “[zombie](https://www.adweek.com/digital/80-of-apps-in-the-app-store-are-practically-zombies/)" app.

### Things to take care on a mobile MVP

#### Successful adoption and recommendation as a community

Most of the mobile app marketing depends on successful adoption and recommendation as a community. If you will upload your MVP to any store, probably it would be a good idea warn your users that it is an MVP version of a in-development product. Obviously that you can start with a small number of well known users (instead of uploading to the store) and get feedback from them before moving to the next stage.

#### Audience interest will wane between launch and future product updates

That's right. Probably you will lose the interest of some users. But in the way, you will be learning how to attract many more users and how to take advantage of the gained traction in order to convince investors/bosses/team/whoever that the idea would work.

#### Developers often compromise UX in the name of minimalism

Wrong!!!... very wrong. This is the worst error in mobile MVP development. Doing this knocks the viability aspect right off. Think about these facts concepts:

*   Poor UX is a definite catalyst to the death of any mobile app.
*   The iOS UX is different than Android UX.
*   Web application interfaces don't translate well to mobile.
*   Conventions change at the blink of an eye in this industry and mobile users are quick to pick up on this.
*   Some stores will reject your app if it doesn't fit there UX requirements (or just doesn't feel as native apps)

Going back to our initial situation, we said that luckily you've contacted us! In these situations we suggest the use of Apache Cordova, a platform for building native mobile applications using HTML, CSS and JavaScript. Indeed we have developed a small framework/template app to quickly build mobile MVPs and help startups to test ideas very fast. This framework produces apps with native-like look&feel, specially aiming iOS and Android platforms.

When we talk about mobile MVPs, we prefer to call them [minimum delightful product](http://blogs.law.harvard.edu/lamont/2013/09/16/mdp-minimum-delightful-product/) (MDP). This approach combines requisite (but critical) functionality, good design and a conscious level of quality, making it less likely that organizations will build mobile apps that don't make any sense to their audiences. At the same time, there isn't excess effort or resources lost in the bargain.

[acknowledgments:md]
This post, originally at http://vairix.com/blog/mobile-mvps-using-cordova, was written for Vairix Software Development, so I want say thanks to them for let me share this with you in my homepage.

[further_reading:md]

[significant_revisions:md]
_Dic 5, 2014__:_ Original publication on dariomac.com

_Dic 11, 2014_: Original publication on dariomac.com

{
  "title": "Finish this website",
  "date": "2017-05-19",
  "layout": "me",
  "card": {
    "color": "#FF6E19",
    "columnid": "progress_2",
    "content": "This is a (never-ending) work in progress",
    "datebox": "2012-now",
    "extlink": "",
    "laneid": "Me",
    "leftbox": "",
    "leftmsg": "",
    "linkto": "/finish-this-website",
    "position": "3",
    "subtaskdetails": [],
    "subtasks": "0",
    "subtaskscomplete": "0",
    "tags": "WIP",
    "title": "Finish this website",
    "type":"Me"
  }
}

---

[summary:string]
This site will be an eternal work in progress and this card represent that.

[short_description:string]
This is a work in progress

[content:md]
UNDER CONSTRUCTION!

This website will be always under construction. I try to keep it updated, adding content to different sections and features related with personal branding.

The buiding of this website started on 2012. At that moment I was working with .Net tehcnology so I search for an extensible and easy to learn/deploy CMS. I found [Kooboo](https://www.kooboo.com/) and it worked like a charm until 2015. 

In 2015 I was working on a Ruby on Rails company, so to learn more about that technology I started a migration to another CMS based on RoR. I found several CMSs, but one that stood out from the rest was [ComfortableMexicanSofa](https://github.com/comfy/comfortable-mexican-sofa) (Comfy). With this change of CMS I suffered the content migration, mostly because both tools had very different approaches. At this time I decided that, if in the future I have to do another migration, at least the content would be migrated to an open format, something easy to maintain and port to any technology.

That moment was on 2017. At that moment I was in charge of a massive content migration project. As a PoC I choose to port my own website to Node.js, but remembering how I suffered with the content last time, I decided to implement a custom content format to fulfill my needs. That is how the dmd format born, a typed [ini](https://en.wikipedia.org/wiki/INI_file) based format, with a json section as front matter and markdown sections (besides other types). Altough initially seems odd, it was destiled from the use of Kooboo and Comfy, taking what I like more from both tools (more about this [here](/static-website-generator)).

I didn't go for a CMS this time. Why? I think web development is living in very confusing times, where trends and fashion clash with common sense. For example, people who use highly reactive web development frameworks to disply almost static information or for administrative websites that don't need any kind of reactivity. These decisions (beside going against common sense) make everything more complex, adding layers of indirections, being more resource intensive and making it more difficult to maintain.

I'm happy with static html generation, is simple, is enough, is easy to maintain; I can't be happier with my dmd format, because it let me do whatever I want, always keeping in mind the KISS principle.

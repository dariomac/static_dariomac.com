
{
  "title": "Traceability Logger",
  "date": "2019-07-16",
  "layout": "project",
  "card": {
    "color": "#6EA4D4",
    "columnid": "done_3",
    "content": "Traceability from client side to server through inter microservices comm",
    "datebox": "2018",
    "extlink": "",
    "laneid": "Project",
    "leftbox": "",
    "leftmsg": "",
    "linkto": "/traceability-logger",
    "position": "20180401",
    "subtaskdetails": [],
    "subtasks": "0",
    "subtaskscomplete": "0",
    "tags": "#nodejs,#js,#logger",
    "title": "Traceability Logger (NodeJS)",
    "type": "Project"
  },
  "resume": {
    "tags": "basecamp-developer,avaaz-sr-se,1degree-director-eng,future-se"
  }
}

---

[summary:string]
The goal of this NodeJS module was to generate centralized logs of different sources (most of the time, microservices) to provide client requests traceability. It use Winston and Morgan modules under the hood but add a layer of services to provide a common highly-customizable format which includes type of signal (request/response), timestamps, ip address, user agent and most important, short non-sequential url-friendly unique ids that let you “follow” a client from the first request done to any service until it leaves. Indeed, after it leaves, the client keep that unique id in it’s browser for later use.

[download_link:string]
https://github.com/dariomac/dm-logger

[platform:string]
Node.js

[link:string]

[short_description:string]

[description:md]
_To see the full description of this module, you can read the article [Node.js logging solutions](/nodejs-logging-solutions)_


{
  "title": "Favoker: solicitud de pequeños servicios",
  "date": "2019-07-20",
  "layout": "project",
  "card": {
    "color": "#AD4647",
    "columnid": "done_3",
    "content": "Favoker: solicitud de pequeños servicios",
    "datebox": "2018-2019",
    "extlink": "https://sisbibliotecas.ort.edu.uy/cgi-bin/koha/opac-detail.pl?biblionumber=89148",
    "laneid": "Project",
    "leftbox": "",
    "leftmsg": "",
    "linkto": "/favoker-solicitud-de-pequenos-servicios",
    "position": "20190530",
    "subtaskdetails": [],
    "subtasks": "0",
    "subtaskscomplete": "0",
    "tags": "pwa,react,js",
    "title": "Favoker (PWA)",
    "type": "Project"
  }
}

---
[summary:string]
Favoker is an MVP of an application aimed to help people with common tasks and needs that may arise unexpectedly, providing a community of people who are willing to help in exchange for a payment.
*Disclaimer*: I've participated in this project *only* on my role of tutor.

[download_link:string]

[platform:string]
PWA - React

[link:string]
https://sisbibliotecas.ort.edu.uy/cgi-bin/koha/opac-detail.pl?biblionumber=89148

[short_description:string]
Favoker is an MVP of an application aimed to help people with daily tasks to be done and needs that may arise unexpectedly, providing a community of people who are willing to help in exchange for a payment. Implemented as a Progressive Web App (PWA) to make it available to a broader audience, without caring about their devices.

[description:md]
**Disclaimer**: _I've participated in this project **only** on my role of [Tutor](/degree-final-projects-tutor)_

Favoker is an app that helps people with unexpected daily tasks and needs by connecting them with a community of people willing to help in exchange for payment. The goal is to create a Minimum Viable Product (MVP) to test with real users and determine if it's feasible for the local market. To achieve this quickly, a Progressive Web App (PWA) was chosen because it's versatile and can be easily installed on different devices.

The app is designed for two main actors: the user who requests the favor and the user partner who accepts the favor. The app must allow users to request a favor and notify partner users that a task is available. A simple user interface is also required for displaying available favors and enabling easy transitions between user and partner user. The development team chose SCRUM to build the software because it's familiar and provides early feedback from the client on the developed features.

## Authors
Long Fernández, Guillermo Daniel | Focco Pira, Juan Ignacio | Rossi Sosa, Santiago

## Score
90/100

## Reviewers
Garbarino Alberti, Helena | Garbervetsky, Diego David

[related_images:json]
  [{
    "filename": "favoker-juan-20190502.jpg"
  }]
